<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows dos下Mysql中文乱码</title>
    <link href="/2022/08/06/Windows-dos%E4%B8%8BMysql%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <url>/2022/08/06/Windows-dos%E4%B8%8BMysql%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>在dos客户端输出窗口中查询表中的数据,还有项目部署到服务器上时前台的页面，中文数据都显示成乱码，如下图所示：</p><p><img src="https://raw.githubusercontent.com/YuanZhou314/PicRepo/main/imgs/20220806173201.png"></p><p>这个问题困扰了我一天，后来解决了才发现原来我的方向错了，一直我以为是SpringBoot项目的原因，因为之前我已经检查过数据库这边的字符集问题，把所有字符集更改成utf8,包括这个character-set-result=utf8,如下图：</p><p><img src="https://raw.githubusercontent.com/YuanZhou314/PicRepo/main/imgs/20220806173640.png"></p><p>结果后来仔细一查才发现，原来我的win7默认使用字符集是GB2312，所以在输出窗口使用的字符集不是UTF8而是GB2312，更改后如下图：</p><p><img src="https://raw.githubusercontent.com/YuanZhou314/PicRepo/main/imgs/20220806173708.png"></p><p>注：网上有人问再次打开又回到原来的编码，这个我重启项目还没有碰到，依旧是可以显示中文。实在不行可以把设置字符集的那段命令写入my.ini文件中去（重启生效）</p><p>说到底还是个菜鸡，欢迎交流</p><p>知识补充：</p><p>GB2312是GBK的子集，是简体中文的码。GBK是包含中日韩大字符集合，支持简体和繁体</p><p>UTF-8包含大部分文字的编码，支持几乎所有字符</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>建站所想</title>
    <link href="/2022/08/06/%E5%BB%BA%E7%AB%99%E6%89%80%E6%83%B3/"/>
    <url>/2022/08/06/%E5%BB%BA%E7%AB%99%E6%89%80%E6%83%B3/</url>
    
    <content type="html"><![CDATA[<p>关于建站的一些思考以及后续的想法</p><span id="more"></span><p>终于把站点弄好啦！！！经过一整天（抽空摸鱼）翻查资料终于搞定了。实际操作完觉得部署这个还算不难，细心一些基本没什么问题。</p><p>目前的实现是：在腾讯云服务器上基于的Hexo框架搭建本地博客，并发布到Github Pages上。</p><p>应该有不少人是跟我一样的配置，云服务器最大的优点就在于跨平台，只要有一台能上外网的设备，就可以随时随地无缝衔接工作。当然，本地PC用户也不在少数，大家都比较养老。</p><p>这篇文章对我建站很有帮助，写的很全面，有详有略。前面简单的操作带过了。比较适合半生不熟的盆友（例如我）。我也是在部署到github上的时候才发现这篇文章，老后悔了，前面踩了很多坑。在发布的时候配置文件中不小心把分支配置成mian，默认的主支是main，所以我每次发布都会新建一个分支，就很离谱……还有部署的时候因为网络原因卡住，网上都会有对应的解决办法。其实只要仔细认真一点就不太会出现问题，整套流程下来还是蛮简单的。</p><p>这里介绍了从基本的环境搭建，到Github建库、安装Hexo、发布到github，还包括一些其他有意思的功能，想要在Github上建站的朋友，一定不能错过。</p><p>注意这里的本地环境是windows</p><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>实际上白天的时候就已经把页面整出来了，晚上回家后花了很多时间思考用哪个主题，最后决定使用fluid。这是看起来比较舒服、流畅度高，且没有什么bug的主题了。</p><p>这是fluid主题的官网</p><p><a href="https://hexo.fluid-dev.com/docs/">https://hexo.fluid-dev.com/docs/</a></p><p>这是目前最开始的状态，只要一个例子和一个Demo。我打算有空的时候先把自己博客园上一些“自我感觉不错的文章”拷过来，当然文章来源不仅是博客园，还有我的公众号&amp;个人随笔&amp;互联网上所有我认为值得记录的东西。</p><p><img src="https://raw.githubusercontent.com/YuanZhou314/PicRepo/main/imgs/20220806095113.png"></p><p>当然这个平台也有一定的缺点，那就是文章只适合阅读，不适合修改。无法像博客园那样拥有后台管理系统，能够随时修改博客。如果需要修改文章就会重新发布，发布时间也会修改。</p><p>残余问题：</p><ol><li>备份。由于Hexo框架中的文档全都在云服务器内，一旦云服务器有问题就有可能会影响我的博客，因此后期在备份上需要花店时间研究一下。</li><li>使用。在Hexo框架中，并不能直接将md文件上传至服务器，Hexo有一定的规则，需要使用自带的命令来创建文章，这个也有点麻烦，需要适应一个新的写作环境。</li><li>图床。图片直接放在md中是没办法显示到网页上的，因为位置仍旧是本地电脑的，因此需要找一个平台上传图片，或者将图片一起打包传至服务器。<ul><li>0806已解决，仍然利用github仓库，通过PicGo上传。PicGo使用教程如下：</li><li><a href="https://blog.dgut.top/2020/07/10/hexo-pic/">https://blog.dgut.top/2020/07/10/hexo-pic/</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/">https://picgo.github.io/PicGo-Doc/zh/guide/</a></li></ul></li><li>广告。在打开主题案例网站的时候发现居然有Google的广告，这是我不能忍受的。但后来发现出现的频率并不是很高，就罢了。</li><li>美化。现在的框架只是一个非常简单、官方的状态，需要后续长期维护，在官方的基础上小修小改，最后变成真正自己的网站，加油！奥利给！现在是8.06凌晨12点01分，该睡觉了。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2022/08/05/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/08/05/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/08/05/hello-world/"/>
    <url>/2022/08/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
